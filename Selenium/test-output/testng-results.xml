<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="parralleltesting" duration-ms="7492" started-at="2020-02-18T11:08:35 SGT" finished-at="2020-02-18T11:08:42 SGT">
    <groups>
    </groups>
    <test name="Assert Equals" duration-ms="7435" started-at="2020-02-18T11:08:35 SGT" finished-at="2020-02-18T11:08:42 SGT">
      <class name="testNG.AssertEquals">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:testNG.AssertEquals@527740a2]" name="openBrowser" is-config="true" duration-ms="7364" started-at="2020-02-18T11:08:35 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="compareTitle()[pri:0, instance:testNG.AssertEquals@527740a2]" name="compareTitle" duration-ms="14" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareTitle -->
        <test-method status="FAIL" signature="testEquality()[pri:0, instance:testNG.AssertEquals@527740a2]" name="testEquality" duration-ms="5" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testNG.AssertEquals.testEquality(AssertEquals.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquality -->
      </class> <!-- testNG.AssertEquals -->
    </test> <!-- Assert Equals -->
    <test name="Annotations" duration-ms="36" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
      <class name="testNG.Annotations">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNG.Annotations@43814d18]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNG.Annotations@43814d18]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNG.Annotations@43814d18]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="firstmethod()[pri:0, instance:testNG.Annotations@43814d18]" name="firstmethod" duration-ms="3" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstmethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNG.Annotations@43814d18]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNG.Annotations@43814d18]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="secondmethod()[pri:0, instance:testNG.Annotations@43814d18]" name="secondmethod" duration-ms="3" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondmethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testNG.Annotations@43814d18]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNG.Annotations@43814d18]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNG.Annotations@43814d18]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-02-18T11:08:42 SGT" finished-at="2020-02-18T11:08:42 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNG.Annotations -->
    </test> <!-- Annotations -->
  </suite> <!-- parralleltesting -->
</testng-results>
